

!pip install -U -q kaggle
!mkdir ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json
!kaggle datasets download -d uciml/sms-spam-collection-dataset
!unzip -q sms-spam-collection-dataset.zip

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

#Load the dataset
df = pd.read_csv('spam.csv', encoding='latin-1')

#Preprocess the data
df = df[['v1', 'v2']]
df.columns = ['label', 'message']

#Convert labels to numerical (spam=1, ham=0)
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

#Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df['message'], df['label'], test_size=0.2, random_state=42)

#Use TF-IDF Vectorizer
tfidf_vectorizer = TfidfVectorizer(max_features=5000)
X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)
X_test_tfidf = tfidf_vectorizer.transform(X_test)

#Train a Logistic Regression model
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

#Predict on the test set
y_pred = model.predict(X_test_tfidf)

#Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy}")
print("Classification Report:")
report
